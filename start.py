import selenium.webdriver
from selenium.webdriver.common.by import By
import telebot
from telebot import types
bot = telebot.TeleBot('-_-')
lst = []
driver = selenium.webdriver.Chrome() # Firefox()

driver.get('https://rasp.rea.ru/?q=15.27–¥-–º–æ02%2F23–±#today')
driver.maximize_window()

all_cards = driver.find_elements(By.XPATH, '//*[@id="zoneTimetable"]/div')
str1 = ""
my_file = open("rasp.txt", "w+")
for row in all_cards:
    # my_file.write(row.text)
    str1+=row.text
# str1 = str1.replace("\n", " ")
rasp = str1
rasp = rasp.replace("\n", " ")
rasp = rasp.split()
pn = []
vt = []
sr = []
ch = []
pt = []
sub = []
last = 0
rasp1 = []
cf = ['1','2','3','4','5','6']
for i in range (len(rasp)):
    if rasp[i] == '–ø–∞—Ä–∞' and rasp[i+2] == '–ø–∞—Ä–∞':
        rasp1.append(rasp[i])
        rasp1.append('-')
    else:
        rasp1.append(rasp[i])
print(rasp1)

for i in range (len(rasp1)):
    if (rasp1[i] != '–í–¢–û–†–ù–ò–ö,'):
        pn.append(rasp1[i])
        last = i +1
    else:
        break
for i in range (last, len(rasp1)):
    if (rasp1[i] != '–°–†–ï–î–ê,'):
        vt.append(rasp1[i])
        last = i + 1
    else:
        break
for i in range (last, len(rasp1)):
    if (rasp1[i] != '–ß–ï–¢–í–ï–†–ì,'):
        sr.append(rasp1[i])
        last = i + 1
    else:
        break
for i in range (last, len(rasp1)):
    if (rasp1[i] != '–ü–Ø–¢–ù–ò–¶–ê,'):
        ch.append(rasp1[i])
        last = i + 1
    else:
        break
for i in range (last, len(rasp1)):
    if (rasp1[i] != '–°–£–ë–ë–û–¢–ê,'):
        pt.append(rasp1[i])
        last = i + 1
    else:
        break
for i in range (last, len(rasp1)):
        sub.append(rasp1[i])
        last = i + 1
# for i in range(last,len(rasp)):
#     while(rasp[i] != '–°–†–ï–î–ê,'):
#         vt.append(rasp[i])
#         last = i

print(pn)
print(vt)
print(sr)
print(ch)
print(pt)
print(sub)

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã  \n /start /button", reply_markup=markup)

@bot.message_handler(commands=['button'])
def button_message(message):
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é")
    markup.add(item1)
    item2=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫")
    markup.add(item2)
    item3=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫")
    markup.add(item3)
    item4=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É")
    markup.add(item4)
    item5=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥")
    markup.add(item5)
    item5=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É")
    markup.add(item5)
    item6=types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É")
    markup.add(item6)
    bot.send_message(message.chat.id,'–ù–∞–∂–º–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –∫–Ω–æ–ø–∫—É',reply_markup=markup)
@bot.message_handler(content_types='text')
def message_reply(message):
    if message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,str1 ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in pn]) ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in vt]) ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in sr]) ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in ch]) ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in pt]) ,reply_markup=markup)
    elif message.text=="—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É":
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
        bot.send_message(message.chat.id,"\n".join([str(x) for x in sub]) ,reply_markup=markup)


# @bot.message_handler(commands=['—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'])
# def rasp(message):
#     # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     # btn1 = types.KeyboardButton("—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
#     # markup.add(btn1)
#     if message.text == "üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è":
#         markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#         btn1 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é')
#         btn2 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫')
#         btn3 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Ç–æ—Ä–Ω–∏–∫')
#         btn4 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—Ä–µ–¥—É')
#         btn5 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —á–µ—Ç–≤–µ—Ä–≥')
#         btn6 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ø—è—Ç–Ω–∏—Ü—É')
#         btn7 = types.KeyboardButton('—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å—É–±–±–æ—Ç—É')
#         markup.add(btn1,btn2, btn3,btn4,btn5,btn6,btn7)
#         bot.send_message(message.from_user.id, '–≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
#     elif message.text == '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é':
#         bot.send_message(message.from_user.id, str1)
#         # bot.send_message(message.from_user.id, str1, parse_mode='Markdown')

@bot.message_handler(commands=['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'])
def pon(message):
        bot.send_message(message.from_user.id, "\n".join([str(x) for x in pn]))

@bot.message_handler(commands=['–≤—Ç–æ—Ä–Ω–∏–∫'])
def vtr(message):
    bot.send_message(message.from_user.id, "\n".join([str(x) for x in vt]))
@bot.message_handler(commands=['—Å—Ä–µ–¥–∞'])
def sred(message):
    bot.send_message(message.from_user.id, "\n".join([str(x) for x in sr]))
@bot.message_handler(commands=['—á–µ—Ç–≤–µ—Ä–≥'])
def chet(message):
    bot.send_message(message.from_user.id, "\n".join([str(x) for x in ch]))
@bot.message_handler(commands=['–ø—è—Ç–Ω–∏—Ü–∞'])
def pyat(message):
    bot.send_message(message.from_user.id, "\n".join([str(x) for x in pt]))
@bot.message_handler(commands=['—Å—É–±–±–æ—Ç–∞'])
def subb(message):
    bot.send_message(message.from_user.id, "\n".join([str(x) for x in sub]))
bot.polling(none_stop=True, interval=0)
